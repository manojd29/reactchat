{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login/Login.js","components/Message/Message.js","components/Messages/Messages.js","components/InfoBar/InfoBar.js","components/Chat/Chat.js","components/Input/Input.js","components/Globalchat/GlobalChat.js","components/Home.js","components/App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","logout","signOut","Provider","Login","history","useHistory","console","log","className","Card","Title","Button","onClick","signInWithPopup","then","push","variant","type","style","width","marginBottom","marginRight","alt","src","Message","message","text","isSentByCurrrentUser","name","ReactEmoji","emojify","Messages","messages","id","map","index","key","InfoBar","room","Container","href","socket","Input","setMessage","sendMessage","placeholder","onChange","event","target","onkeyPress","Chat","photoURL","setMessages","ENDPOINT","io","emit","off","on","preventDefault","GlobalChat","setName","photo","setPhoto","setRoom","joined","setJoined","filter","badWords","displayName","socketClient","receivedMessage","ClassName","Form","onSubmit","e","xs","md","marginTop","Image","roundedCircle","textTransform","textAlign","pic","clean","body","messageBody","autoComplete","Home","initializing","setInitializing","currentUser","setUser","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c6b6426.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBpmYvFxrfpKeMp2n227DNJBdFly6GpqkU\",\r\n  authDomain: \"reactjs-auth-324ee.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://reactjs-auth-324ee-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"reactjs-auth-324ee\",\r\n  storageBucket: \"reactjs-auth-324ee.appspot.com\",\r\n  messagingSenderId: \"283143639450\",\r\n  appId: \"1:283143639450:web:77bc31cc9504934637aa23\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const analytics = firebase.analytics();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const logOut = () => {\r\n  auth.signOut();\r\n};\r\n\r\nexport default firebase;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth, provider } from \"../../firebase\";\r\nimport \"./Login.css\";\r\n\r\nexport default function Login() {\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const signInWithGoogle = () => {\r\n    auth.signInWithPopup(provider).then(() => {\r\n      setLoading(true);\r\n      history.push(\"/home\");\r\n    });\r\n  };\r\n\r\n  console.log(loading);\r\n  return (\r\n    <div className=\"loginPage\">\r\n      <div className=\"loginContainer\">\r\n        <Card.Title>App Name</Card.Title>\r\n        <Button\r\n          onClick={signInWithGoogle}\r\n          variant=\"outline-primary\"\r\n          className=\"loginBtn\"\r\n          type=\"submit\"\r\n        >\r\n          <img\r\n            style={{ width: \"15px\", marginBottom: \"3px\", marginRight: \"5px\" }}\r\n            alt=\"Google login\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\"\r\n          />\r\n          Sign In With Google\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactEmoji from \"react-emoji\";\r\nimport \"./Message.css\";\r\n\r\nexport default function Message({ message: { text, user }, name }) {\r\n  let isSentByCurrrentUser = false;\r\n  if (user === name) {\r\n    isSentByCurrrentUser = true;\r\n  }\r\n\r\n  return isSentByCurrrentUser ? (\r\n    <div className=\"messageContainer justifyEnd\">\r\n      <p className=\"sentText pr-10\">{user}</p>\r\n      <div className=\"messageBox backgroundBlue\">\r\n        <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"messageContainer justifyStart\">\r\n      <div className=\"messageBox backgroundLight\">\r\n        <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n      </div>\r\n      <p className=\"sentText pl-10 \">{user}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Message from \"../Message/Message\";\r\nimport \"./Messages.css\";\r\n// import ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\n\r\nconst Messages = ({ messages, name }) => {\r\n  return (\r\n    <div className=\"pageStyle\" id=\"msg-container\">\r\n      <ScrollableFeed>\r\n        {messages.map((message, index) => (\r\n          <div key={index}>\r\n            <Message message={message} name={name} />\r\n          </div>\r\n        ))}\r\n      </ScrollableFeed>\r\n    </div>\r\n  );\r\n};\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport \"./InfoBar.css\";\r\n\r\nexport default function InfoBar({ room }) {\r\n  return (\r\n    <Container className=\"infobar-container\">\r\n      <div className=\"left-container\">\r\n        <h1 className=\"room-name\">{room}</h1>\r\n      </div>\r\n      <div className=\"right-container\">\r\n        <a href=\"/home\">\r\n          <Button className=\"leave-btn\">Leave Room</Button>\r\n        </a>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Messages from \"../Messages/Messages\";\r\nimport \"./Chat.css\";\r\nimport InfoBar from \"../InfoBar/InfoBar\";\r\nimport Input from \"../Input/Input\";\r\nimport io from \"socket.io-client\";\r\n\r\nlet socket;\r\n\r\nexport default function Chat({ name, room, photoURL }) {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const ENDPOINT = \"https://manojd29.github.io/reactchat\";\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"join\", { name, room, photoURL }, () => {});\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\");\r\n      socket.off();\r\n    };\r\n  }, ENDPOINT);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n  }, [messages]);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n    }\r\n  };\r\n  console.log(message, messages);\r\n  return (\r\n    <div className=\"container\">\r\n      <InfoBar room={room} />\r\n      <Messages messages={messages} name={name} photoURL={photoURL} />\r\n      <Input\r\n        setMessage={setMessage}\r\n        sendMessage={sendMessage}\r\n        message={message}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nexport default function Input({ setMessage, sendMessage, message }) {\r\n  return (\r\n    <form className=\"inputform\">\r\n      <input\r\n        className=\"textinput\"\r\n        value={message}\r\n        placeholder=\"Type your message!!!\"\r\n        onChange={(event) => setMessage(event.target.value)}\r\n        onkeyPress={(event) => (event.key === \"Enter\" ? sendMessage : \"null\")}\r\n      />\r\n      <button className=\"sendMsg\" onClick={sendMessage}>\r\n        SEND\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport socketClient from \"socket.io-client\";\r\nimport { Image, Form, Button, Card } from \"react-bootstrap\";\r\nimport \"./GlobalChat.css\";\r\nimport ReactEmoji from \"react-emoji\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport Chat from \"../Chat/Chat\";\r\nimport { auth } from \"../../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport badWords from \"bad-words-relaxed\";\r\nlet socket;\r\n\r\nfunction GlobalChat({ user }) {\r\n  const history = useHistory();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [photo, setPhoto] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [room, setRoom] = useState(\"\");\r\n  const [joined, setJoined] = useState(false);\r\n  const ENDPOINT = `https://manojd29.github.io/reactchat`;\r\n\r\n  var filter = new badWords();\r\n\r\n  const joinRoom = (e) => {\r\n    if (!room) {\r\n      e.preventDefault();\r\n    } else {\r\n      setJoined(true);\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    auth.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { displayName, photoURL } = user;\r\n    setName(displayName);\r\n    setPhoto(photoURL);\r\n    socket = socketClient(ENDPOINT);\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"Socket connected to the backend\");\r\n      socket.on(\"message\", (message) => {\r\n        receivedMessage(message);\r\n      });\r\n    });\r\n  }, [ENDPOINT]);\r\n  function receivedMessage(message) {\r\n    setMessages((messages) => [...messages, message]);\r\n  }\r\n  var formSubmit = (event) => {\r\n    event.preventDefault();\r\n    const messageBody = {\r\n      body: message,\r\n      id: name,\r\n      pic: photo,\r\n    };\r\n    setMessage(\"\");\r\n    socket.emit(\"send message\", messageBody);\r\n  };\r\n  return joined ? (\r\n    <>\r\n      <Chat name={name} room={room} photoURL={photo} />\r\n    </>\r\n  ) : (\r\n    <>\r\n      <div className=\"outerContainer\">\r\n        <div ClassName=\"leftContainer\">\r\n          <Card className=\"join-card\">\r\n            <h5>Create Room</h5>\r\n            <p>Welcome back, {name}.</p>\r\n            <Form onSubmit={joinRoom} className=\"text-center\">\r\n              <div xs={6} md={4} style={{ marginTop: \"10px\" }}>\r\n                <Image src={photo} roundedCircle />\r\n              </div>\r\n\r\n              <Card.Title>{name}</Card.Title>\r\n\r\n              <input\r\n                className=\"join-input\"\r\n                placeholder=\"Enter Room Name..\"\r\n                style={{ textTransform: \"lowercase\", textAlign: \"center\" }}\r\n                onChange={(e) => setRoom(e.target.value)}\r\n              />\r\n              <Button className=\"send-btn\" type=\"submit\">\r\n                Join\r\n              </Button>\r\n            </Form>\r\n\r\n            <p>Not, {name}?</p>\r\n            <Button className=\"logout-btn\" onClick={logOut}>\r\n              Sign Out\r\n            </Button>\r\n          </Card>\r\n        </div>\r\n        <div className=\"rightContainer\">\r\n          <h3>Chat with everyone!</h3>\r\n          <div className=\"msg-container\">\r\n            <ScrollableFeed>\r\n              {messages.map((message, index) => {\r\n                if (message.id === name) {\r\n                  return (\r\n                    <div className=\"messageContainer justifyEnd\">\r\n                      <div className=\"sent-text pr-10\" key={index}>\r\n                        <Image width=\"25px\" src={message.pic} roundedCircle />\r\n                        {message.id}\r\n                        <div className=\"message-box backgroundBlue\">\r\n                          <p className=\"message-text colorWhite\">\r\n                            {ReactEmoji.emojify(filter.clean(message.body))}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <div className=\"messageContainer justifyStart\">\r\n                      <div className=\"sent-text pl-10 \" key={index}>\r\n                        <div className=\"message-box backgroundLight\">\r\n                          <p className=\"message-text colorDark\">\r\n                            {ReactEmoji.emojify(filter.clean(message.body))}\r\n                          </p>\r\n                        </div>\r\n                        <Image width=\"25px\" src={message.pic} roundedCircle />\r\n                        {message.id}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n            </ScrollableFeed>\r\n          </div>\r\n          <form onSubmit={formSubmit} className=\"msg-form\">\r\n            <input\r\n              placeholder=\"Type a message to send\"\r\n              className=\"msg-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              name=\"messageInput\"\r\n              value={message}\r\n              onChange={(event) => setMessage(event.target.value)}\r\n            />\r\n            <Button\r\n              className=\"msg-btn\"\r\n              type=\"submit\"\r\n              onClick={(e) => (!message ? e.preventDefault() : \"null\")}\r\n            >\r\n              SEND\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GlobalChat;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport GlobalChat from \"./Globalchat/GlobalChat\";\r\n\r\nfunction Home() {\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState(() => auth.currentUser);\r\n  const { displayName, photoURL } = user;\r\n  console.log(displayName);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n        setUser(false);\r\n      }\r\n      if (initializing) {\r\n        setInitializing(false);\r\n      }\r\n    });\r\n\r\n    // Cleanup subscription\r\n    return unsubscribe;\r\n  }, [auth, initializing]);\r\n\r\n  return (\r\n    <>\r\n      <GlobalChat user={user} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { AuthProvider } from \"../contexts/AuthContext\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"./Login/Login\";\r\nimport Home from \"./Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <center>\r\n      <Router>\r\n        <AuthProvider>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route path=\"/home\" component={Home} />\r\n          </Switch>\r\n        </AuthProvider>\r\n      </Router>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./components/App\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}